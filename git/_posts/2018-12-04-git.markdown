---
layout: post
title: "[Git] 이란?"
categories: posts
tags: git
---

# [Git] 이란?


## Git
+ 버전관리 시스템(VCS Control System)
    + VCS로 이미지나 레이아웃의 버전(변경 이력 혹은 수정 내용)을 관리하는 것은 매우 좋음

### VCS를 사용하면 좋은점
1. 각 파일을 이전 상태로 되돌릴 수 있다.
2. 프로젝트를 통째로 이전 상태로 되돌릴 수 있다.
3. 시간에 따라 수정 내용을 비교해 볼수 있다.
4. 누가 문제를 일으 켰는지도 추적 또는 누가 언제 만들어낸 이슈인지도 알수 있음
5. 파일을 잃어버리거나 잘못 고쳤을때도 쉽게 복구 할 수 있다.

### 로컬 버전 관리
+ 많은 사람은 버전을 관리하기 위해 디렉토리로 파일을 복사하는 방법을씀(디렉토리 이름에 시간을 넣음)
+ VCS는 아주 간단한 데이터베이스를 사용해 파일의 변경 정보를 관리함

### 중앙집중식 버전 관리 (CVCS)
+ 프로젝트를 진행하다 보면 다른 개발자와 함께 작업하는 경우가 많음
+ 이럴 때 생기는 문제를 해결하기 위해 CVCS(중앙집중식 VCS)가 개발됨.
+ CVS, Subversion, Perforce 같은 시세틈 파일을 관리하는 서버가 별도로 있음
+ 중앙 서버에서 파일을 받아서 사용(Checkout)함

```
CVCS 단점
중앙 서버가 다운되거나 날아가면 다른 사람과 협업을 할수 없고 백업할 방법도 없음
로컬 VCS시스템도 비슷한 결점이 있는데 문제가 발생하면 모든것을 잃음
그래서 나온게 분산 버전 관리 시스템!!(Git, Mecurial, Bazaar, Darcs)
```

### 분산 버전 관리 시스템
+ DVCS(분산 버전 관리 시스템) - Git, Mecurial, Bazaar, Darcs
    + DVCS에서의 클라이언트는 단순히 파일의 마지막 스냅샷을 Checkout 하지 않음
    + 저장소를 히스토리와 더불어 전부 복제
    + 서버에 문제가 생기면 이 복제물로 다시 작업을 시작할수 있음
    + 클라이언트 중에서 아무거나 골라도 서버를 복원할 수 있음
    + Clone은 모든 데이터를 가진 진정한 백업임

### 리모트 저장소
+ 어느 컴퓨터나 서버를 사용할수있는데 서버용으로 사용하는 것을 리모트 저장소라함
    + 리모트 저장소를 기준으로 작업을 많이 함.



