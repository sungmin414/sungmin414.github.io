---
layout: post
title: "[이미지] 설정"
categories: posts
tags: html_css_js
---

# [이미지] 설정

## 이미지를 표현하는 방법
1. img 태그
	- 이미지가 의미가 있을때 사용 / alt 태그 - 대체 문자 표현
2. background 속성
	- 이미지가 의미가 없을때 사용 / 대체문자 X
3. 이미지를 background 속성 / 웹 표준 준수하기 위해서는 가상으로 대체를 문자를 만들어줌(IR효과)
	- 이미지 스프라이트기법사용하면 용량 작아짐

## 화면 해상도에따라 이미지표현

- 보통이미지는 일반 디바이스에서 잘 나오지만 해상도가 높은 디바이스에서는 이미지가 흐리게 나옴.
- 평소에는 일반 이미지가 나오고 레티나 디바이스에서는 고해상도 이미지가 나오게 하면 된다.
- 이미지를 표현하는 방법 두가지(상황에 골라쓰기)
	1. img태그를 이용할때는 (srcset)
	2. background를 이용할때는 (mediquery)
- 디바이스에 따라 해상도를 구별 할수있어야함(확인방법 아래 링크)
	- [디바이스별 해상도확인사이트](https://webkit.org/demos/srcset/)
	- [고밀도 디스플레이를 위한 이미지 다루는법 정리 된 사이트](https://blog.hanlee.io/2018/high-density-display-and-images/)


```
reset.css에 넣어서 기본셋팅때 같이사용하면 편함

/* 아이콘 이미지 최적화 작업 설명 */
.icon {일반이미지}
@media only screen and (-webkit-min-device-pixel-ratio: 1.5),
       only screen and (min-device-pixel-ratio: 1.5),
       only screen and (min-resolution: 1.5dppx){
            .icon {고해상도 이미지}
       }
       
       
/* 아이콘 이미지 최적화 작업 사용법 */
.icon {background-image: url(../img/icon.png);}

@media only screen and (-webkit-min-device-pixel-ratio: 1.5),
       only screen and (min-device-pixel-ratio: 1.5),
       only screen and (min-resolution: 1.5dppx){
            .icon {background-image: url(../img/icon@2.png); background-size: 500px;}
       }
```

## 이미지를 표현하는 태그

1. img : 이미지를 불러 올때 사용
2. figure : 이미지를 표현 할때 사용
3. figcation : 이미지를 설명 할때 사용
4. picture : 이미지를 화면 크기에 따라 사용
	- 반응형 이미지와 관련된 태그이다
	- 화면 크기에 따라 이미지 크기를 다르게 구현할수 있음
	- source태그와 같이 사용하면 미디어쿼리를 사용할수 있음
	- img 태그의 srcset 속성을 이용하면 화면크기 및 해상도에 따라 이미지 표현도 가능
	- 미디어쿼리를 이용하면 화면크기 및 해상도에 따라 이미지 표현가능

```

- img
<img src="경로/img.jpg" alt="이미지">

- figure
<figure>
	<img src="경로/img.jpg" alt="이미지">
	<figcation>이미지 설명</figcation>
</figure>

------------보통 이렇게사용--------------

- picture          (화면 크기에 따라 이미지를 다르게 할수있음)
<picture>
	<source
		media="(max-width:799px)"
		srcset="img799w.jpg">
	<source
		media="(min-width:800px)"
		srcset="img800w.jpg">
	<img src="img.jpg" alt="이미지">
</picture>


```



## 반응형 사이트를 제작하기위해 알아두기
- 유동 레이아웃(flexible layout)
- 미디어 쿼리(media query)
- 반응형 이미지(responsive image)

### 이미지 크기와 관련 문제

1. 반응형 웹에서는 디바이스에 따라 이미지의 크기는 가변적으로 변함. 
2. 보통 피시 화면의 이미지를 만들어 모바일까지 같이 사용하는 경우가 많다. 이럴 경우 작은 사이즈 화면 이미지도 큰 이미지를 사용하는 경우가 많고 불필요한 용량의 낭비가 생기고 페이지 로딩 **속도도 느려짐**
3. 쓸데없는 트래픽이 많이 발생
4. 피시화면에서 잘 보이게 마든 큰용량의 이미지를 굳이 모바일 화면에 똑같이 불러올 필요는 없음!!

### 레티나 디바이스에 대한 문제

1. 현재 밀집도가 높은 디바이스가 많음
2. 고밀집도 디바이스에 대응해야하는 문제가 생기게 된다.
3. 평소에 잘 보이던 이미지도 레티나 디바이스에서 보면 흐릿하게 보이는 현상이 생김

### 위 두가지 문제 해결 방법

- 애플에서 제안한 방법(img 태그에 srcset과 sizes 속성을 추가하여 반응형 이미지를 처리하는 방식)

```
<img srcset="img320w.jpg 320w,
                img480w.jpg 480w,
                img800w.jpg 800w"
        sizes="(max-width:320px)280px,
                (max-width:480px)440px,
                800px"
        src="img800w.jpg" alt="이미지">
```

- 해상도를 이용한 방법

```
<img srcset="img320w.jpg,
            img480w.jpg 1.5x,
            img640w.jpg 2x"
    src="img640w.jpg" alt="이미지">
```
- img320w.jpg 320w 화면 크기에 따른 표현법
- img480w.jpg 1.5x 화면 해상도에서 따른 표현법
- w는 실제 이미지 크기를 의미하며, x는 해상도를 의미



## 이미지 스프라이트

- 이미지를 적용할 경우 각각의 요소에 들어가는 배경이미지를 낱개로 만들지 않고 비슷한 성격의 배경이미지를 하나의 파일로 제작하여 사용
- background-position을 이용하여 배경이미지를 배치함
- 이미지 스프라이트를 사용하면 서버 요청 수가 감소하고 대역폭이 절약된다.


## lightgallery 플러그인

+ [lightgallery플로그인 사용법 문서](https://sachinchoolur.github.io/lightGallery/)


## grid
+ grid
+ 사용법 
	+ [grid 사용법 문서](https://www.w3schools.com/cssref/pr_grid.asp)

```
# 사용법( 열과행을 지정할수 있음, 자세한건 검색해서 사용하기 )

display: grid;
grid-template-columns: 150px 1fr;
```

